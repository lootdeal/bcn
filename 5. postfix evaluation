#include <iostream>
#include <string>
#include <cmath>
using namespace std;

struct Node {
    float data;
    Node* next;
    Node(float value) : data(value), next(nullptr) {}
};

class Stack {
    Node* top;
public:
    Stack() : top(nullptr) {}
    void push(float value) {
        Node* newNode = new Node(value);
        newNode->next = top;
        top = newNode;
    }
    float pop() {
        if (isEmpty()) return -1;
        Node* temp = top;
        float value = top->data;
        top = top->next;
        delete temp;
        return value;
    }
    bool isEmpty() { return top == nullptr; }
    ~Stack() { while (!isEmpty()) pop(); }
};

bool isDigit(char ch) { return ch >= '0' && ch <= '9'; }

float evaluatePostfix(const string& postfix) {
    Stack stack;
    for (char ch : postfix) {
        if (isDigit(ch)) stack.push(ch - '0');
        else {
            float b = stack.pop(), a = stack.pop();
            switch (ch) {
                case '+': stack.push(a + b); break;
                case '-': stack.push(a - b); break;
                case '*': stack.push(a * b); break;
                case '/': stack.push(a / b); break;
                case '^': stack.push(pow(a, b)); break;
            }
        }
    }
    return stack.pop();
}

int main() {
    string postfix;
    cout << "Enter a postfix expression: ";
    cin >> postfix;
    cout << "The result is: " << evaluatePostfix(postfix) << endl;
    return 0;
}
